/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

@font-face {
  font-family: "Open Sans";
  src: url(".../../.../..//assets/fonts/OpenSans-Light.eot");
  src: url("../../assets/fonts/OpenSans-Light.eot?#iefix") format("embedded-opentype"), url("../../assets/fonts/OpenSans-Light.woff2") format("woff2"), url("../../assets/fonts/OpenSans-Light.woff") format("woff"), url("../../assets/fonts/OpenSans-Light.ttf") format("truetype"), url("../../assets/fonts/OpenSans-Light.svg#OpenSans-Light") format("svg");
  font-weight: 300;
  font-style: normal; }

@font-face {
  font-family: "Open Sans Ital";
  src: url("../../assets/fonts/../../assets/fonts/OpenSansLight-Italic.eot");
  src: url("../../assets/fonts/OpenSansLight-Italic.eot?#iefix") format("embedded-opentype"), url("../../assets/fonts/OpenSansLight-Italic.woff2") format("woff2"), url("../../assets/fonts/OpenSansLight-Italic.woff") format("woff"), url("../../assets/fonts/OpenSansLight-Italic.ttf") format("truetype"), url("../../assets/fonts/OpenSansLight-Italic.svg#OpenSansLight-Italic") format("svg");
  font-weight: 300;
  font-style: italic; }

@font-face {
  font-family: "Open Sans Bold";
  src: url("../../assets/fonts/OpenSans-Bold.eot");
  src: url("../../assets/fonts/OpenSans-Bold.eot?#iefix") format("embedded-opentype"), url("../../assets/fonts/OpenSans-Bold.woff2") format("woff2"), url("../../assets/fonts/OpenSans-Bold.woff") format("woff"), url("../../assets/fonts/OpenSans-Bold.ttf") format("truetype"), url("../../assets/fonts/OpenSans-Bold.svg#OpenSans-Bold") format("svg");
  font-weight: bold;
  font-style: normal; }

@font-face {
  font-family: "Open Sans Bold Ital";
  src: url("../../assets/fonts/OpenSans-BoldItalic.eot");
  src: url("../../assets/fonts/OpenSans-BoldItalic.eot?#iefix") format("embedded-opentype"), url("../../assets/fonts/OpenSans-BoldItalic.woff2") format("woff2"), url("../../assets/fonts/OpenSans-BoldItalic.woff") format("woff"), url("../../assets/fonts/OpenSans-BoldItalic.ttf") format("truetype"), url("../../assets/fonts/OpenSans-BoldItalic.svg#OpenSans-BoldItalic") format("svg");
  font-weight: bold;
  font-style: italic; }

body {
  font-family: "Open Sans";
  background-color: black;
  font-size: 12px;
  height: 100vh; }

header {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -ms-flex-line-pack: center;
      align-content: center;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  margin-top: 5px;
  height: 90%;
  width: 100%; }

.logo {
  margin: 0 auto;
  text-align: center;
  font-size: 12px; }
  .logo img {
    margin: 0;
    height: 220px; }
  @media (min-width: 600px) {
    .logo {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-direction: row;
              flex-direction: row; } }
  @media (min-width: 1000px) {
    .logo {
      padding-left: 2rem;
      margin: 0 0;
      -ms-flex-line-pack: start;
          align-content: flex-start; } }

.choose-section-container {
  padding-bottom: 15px;
  font-size: 12px;
  margin-top: 1rem; }
  .choose-section-container h3 {
    color: white;
    margin-bottom: 1rem; }
  @media (min-width: 600px) {
    .choose-section-container {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: center;
          -ms-flex-pack: center;
              justify-content: center;
      -ms-flex-line-pack: center;
          align-content: center;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
          -ms-flex-direction: column;
              flex-direction: column;
      width: 100%;
      font-size: 14px; } }
  @media (min-width: 1000px) {
    .choose-section-container {
      margin: 0 0;
      padding-left: 0rem;
      padding-bottom: 2rem;
      font-size: 16px;
      text-align: left; } }

.selection {
  margin: 0 auto;
  width: 107px;
  height: 32px; }
  @media (min-width: 1000px) {
    .selection {
      margin: 0 0;
      -ms-flex-line-pack: start;
          align-content: flex-start; } }

footer {
  width: 100%;
  height: 9%;
  bottom: 0;
  font-size: 12px;
  color: #c2c2c2;
  text-align: center; }
  @media (min-width: 1000px) {
    footer {
      font-size: 16px;
      text-align: left;
      padding-left: 2rem; } }

header.activate {
  margin: 0;
  height: 240px;
  max-width: 600px;
  padding: 32px; }
  @media (min-width: 600px) {
    header.activate {
      height: 72px;
      max-width: 999px; } }
  @media (min-width: 1000px) {
    header.activate {
      height: 72px; } }

header.activate .logo {
  height: 220px;
  width: 300px; }
  @media (min-width: 600px) {
    header.activate .logo {
      height: 135px;
      max-width: 600px;
      padding-right: 300px; } }
  header.activate .logo img {
    width: 150px;
    height: 150px; }
    @media (min-width: 600px) {
      header.activate .logo img {
        width: 67px;
        height: 67px; } }

header.activate .choose-section-container {
  padding: 10px;
  margin: 0; }
  @media (min-width: 600px) {
    header.activate .choose-section-container {
      text-align: left;
      padding-left: 60px; } }

header.activate select.selection {
  margin: 0 auto;
  width: 107px;
  height: 32px; }
  @media (min-width: 600px) {
    header.activate select.selection {
      margin: 0;
      height: 32px;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: start;
          -ms-flex-pack: start;
              justify-content: flex-start; } }
  @media (min-width: 1000px) {
    header.activate select.selection {
      -ms-flex-line-pack: start;
          align-content: flex-start;
      font-size: 16px; } }

.selectPage {
  display: relative;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column; }
  @media (min-width: 600px) {
    .selectPage {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-direction: row;
              flex-direction: row;
      padding-top: 50px; } }

ul {
  list-style: none; }

a,
li {
  text-decoration: none;
  color: white;
  width: 100%;
  height: 25rem;
  background-size: cover;
  background-position: center;
  position: relative; }
  @media (min-width: 600px) {
    a,
    li {
      -webkit-box-flex: 1;
          -ms-flex: 1 0 50%;
              flex: 1 0 50%; } }
  @media (min-width: 1000px) {
    a,
    li {
      -webkit-box-flex: 1;
          -ms-flex: 1 0 25%;
              flex: 1 0 25%; } }

.title {
  position: absolute;
  bottom: 0;
  text-align: left; }

.loading {
  position: fixed;
  width: 100vw;
  height: 100vh;
  top: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }
  .loading img {
    width: 150px;
    height: 150px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
